对于C#来讲，一维数组的作用和C语言的差不多，但是声明情况却相距甚远；
声明一个数组：int[] arr;
注意：数组的长度不是声明的一部分，而且数组必须在访问前初始化。数组的类型可以是基本数据类型，也可以是枚举或其他类型。因此会出现下面的语句：
int[] arr = new int[5];   其中在声明数组的时候[]放在数组名称的前面，并且需要为数组记性new运算来分配地址空间.
但也可以像c语言的数组一样直接进行初始化:    int[] arr = {1,2,3,4,5};
这些对于string类型也是通用的

对于二维数组来讲，0代表数组下表为1的元素，1代表数组下表为2的元素，因此我们在使用arr.Rank的时候得到的秩是准确的秩，但不能用于arr.GetupperBound(arr.Rank)
中，因为这样做会产生越界，因此我们可以先-1之后再判别式里＋1。

动态二维数组：
type[] arryName;
arrayName = new type[n1,n2,...](n1,n2为数组的长度)
从这里我们可以看到new运算符大部分时候的作用都是用来申请动态变量的，因为new相当于系统中的占位符，用来获取空间，因此对于那些需要随时间改变元素个数的数组或字符串
来说是十分有益的。
例：int m =2;
    int n=2;
    int[,] arry2=new int[m,n];（此时的数组并没有进行赋值，因此是初始化状态）
