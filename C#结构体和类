首先我们先来说说结构体
结构体就如同其他语言中的结构体一样，一般来说我们推荐将结构体声明于类之前，这样我们就可以让所有类使用该结构体。

对象：
我们在代码中描述一个对象，通过描述这个对象的属性和方法。对象必须是看得见摸得着的
类：
类是相同对象的集合。类描述了一系列在概念上有相同含义的对象，并为这些对象统一定义了编程语言上的属性和方法。
类不占内存，而对象是占内存的。
那么如果我们想要对类里面的数进行初始化操作，我们就需要用到构造函数。构造函数大多运用于类的初始化阶段，他的函数名
与类的名称相同，因此我们在实例化一个新的类的时候构造函数就自动执行了。
说到类就得说属性这个概念。
属性：

属性的作用：保护字段，对字段的取值与赋值进行限定。
说明：属性往往被声明在字段的下方，并且将字段私有化。因此对于一个类来讲，我们的字段应该在大部分情况下都声明为private，
而属性则应该声明为public。
get可以用于对取值进行限定，set可以用来对赋值进行限定
属性分为（1）又读又写，同时包含get与set
（2）只读 只包含get
（3）只写 只包含set
（4）自动 占据位置

继承：
  在C#中，任何类的继承都可以从另外一个类继承，这就是说，这个类拥有它继承的类的所有成员。在面向对象中，被继承的类
称为父类或基类。C#只支持单继承，不支持多重继承，即在C#中一次只允许继承一个类，不能同时继承多个类。
  在继承一个类的时候，类成员的可访问性是一个重要的问题。子类（派生类）不能访问基类的私有成员，但是可以访问public
成员，就可以让一个类成员被基类和子类同时访问，同时也可以被外部的代码访问。
  为了解决基类成员访问问题，C#还提供另外一种课访问性：protected，只有子类（派生类）才能访问proteceted成员，基类和外部代码都不能访问protected成员
  Myclass1 myclass1 =  (Myclass1)myclass2 ;如果出现你这类情况的产生，就会出现该类型转换是多余的显示，这是因为类是无法转换的，因此这句话实际上就相当于
  Myclass1 myclass1 =  myclass2 ;无论是从语法上还是从结果上都是没有错误的。
